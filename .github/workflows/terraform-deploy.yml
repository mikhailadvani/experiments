on:
  workflow_call:
    inputs:
      directory:
        description: 'The directory to change into before running terraform commands'
        required: true
        type: string
      AWS_REGION:
        default: eu-west-1
        required: false
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true


jobs:
  terraform-deploy:
    runs-on: ubuntu-latest
    container: hashicorp/terraform:1.0.11
    steps:
      - uses: actions/checkout@v2
      
      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: ${{ inputs.AWS_REGION }}

      - name: "terraform-validate::${{ inputs.directory }}"
        id: validate
        run: |
          cd ${{ inputs.directory }}
          terraform init
          terraform validate

      - name: "terraform-plan::${{ inputs.directory }}"
        id: plan
        run: |
          cd ${{ inputs.directory }}
          echo "::set-output name=stdout::$(terraform plan -out _tfplan -no-color)"

      - name: echo
        run: echo ${{ steps.plan.outputs.stdout }}

      - name: echo all
        run: echo ${{ steps.plan.outputs.* }}

      - uses: actions/github-script@v5
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
          TF_WORKING_DIR: ${{ inputs.directory }}
        with:
          script: |
            const output = `#### Terraform Plan

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.TF_WORKING_DIR }}\`, Workflow: \`${{ github.workflow }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: "terraform-apply::${{ inputs.directory }}"
        if: github.ref == 'refs/heads/main'
        run: |
          cd ${{ inputs.directory }}
          terraform apply _tfplan
